#! /bin/sh

check_if_disk_exists(){
    if [ ! -b "$1" ]; then
        echo $1 disk does not exit
        exit 1
    fi
}

format_partitions_efi(){
    echo creating file formats
    mkfs.vfat -F32 $11
    mkswap $12
    swapon $12
    mkfs.ext4 $13
}
mount_partitions_efi(){
    echo Mounting partitions
    mount $13 /mnt
    mkdir /mnt/boot
    mkdir /mnt/boot/efi
    mount $11 /mnt/boot/efi
    touch /mnt/efi
}
format_partitions_MBR(){
    echo creating file formats
    mkfs.ext4 $11
    mkswap $12
    swapon $12
}
mount_partitions_MBR(){
    echo Mounting partitions
    mount $11 /mnt
}
update_pacman_mirror(){
    ## Norway
    echo "Server = http://mirror.neuf.no/archlinux/\$repo/os/\$arch" | cat - /etc/pacman.d/mirrorlist > temp && mv temp /etc/pacman.d/mirrorlist
}

check_boot_type(){
    if [ -e /sys/firmware/efi/efivars ];then
        echo "efi"
    else
        echo ""
    fi
}
prepare_new_system(){
    cp part2 /mnt/part2
    cp pkglist.txt /mnt/pkglist.txt
    cp configUser /mnt/configUser
    cat $PASS >/mnt/passTMP
}

BOOT_TYPE=check_boot_type

echo "chose password for system(root and mar user)"
read PASS
echo "which disk (/dev/sdX) !!!!the disk will be formated"
read INSTALL_DISK

check_if_disk_exists $INSTALL_DISK 
timedatectl set-ntp true

if [ "$BOOT_TYPE" = "efi" ]; then 
    echo "making efi filesystem" 
    sfdisk $INSTALL_DISK < ./partitionLayouts/efi
    format_partitions_efi $INSTALL_DISK
    mount_partitions_efi $INSTALL_DISK
else
    echo "making MBR filesystem" 
    sfdisk $INSTALL_DISK < ./partitionLayouts/biosMBR
    format_partitions_MBR $INSTALL_DISK
    mount_partitions_MBR $INSTALL_DISK
fi;

update_pacman_mirror
prepare_new_system $PASS

#packstrap
pacstrap /mnt base base-devel linux linux-firmware vim
##GenfsTab
genfstab -U /mnt >> /mnt/etc/fstab

arch-chroot /mnt ./part2
reboot

