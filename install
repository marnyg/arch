#! /bin/sh

check_for_disk_argument(){
    if [[ $1 != "--disk" && -z $2 ]]; then
        echo which disk, use this format:
        echo ./install --disk $2
        exit 1
    fi
}

check_if_disk_exists(){
    if [ ! -b "$1" ]; then
        echo $1 disk does not exit
        exit 1
    fi
}

partition_disk_efi(){
(
    echo g # Create a new empty partition table
    echo n # Add a new partition
    echo 1 # Partition number
    echo   # First sector (Accept default: 1)
    echo +512M # size of partition
    echo n # Add a new partition
    echo 2 # Partition number
    echo   # First sector (Accept default: 1)
    echo +10G # size of partition
    echo n # Add a new partition
    echo 3 # Partition number
    echo   # First sector (Accept default: 1)
    echo   # size of partition (Accept default: 1)
    echo t # set type of partition 
    echo 1 # select partition 1
    echo 1 # set type to efi partition 

    echo w # Write changes
) | fdisk $1
}

format_partitions_efi(){
    echo creating file formats
    mkfs.vfat -F32 $11
    mkswap $12
    swapon $12
    mkfs.ext4 $13
}
mount_partitions_efi(){
    echo Mounting partitions
    mount $13 /mnt
    mkdir /mnt/boot
    mkdir /mnt/boot/efi
    mount $11 /mnt/boot/efi
}
format_partitions_MBR(){
    echo creating file formats
    mkfs.ext4 $11
    mkswap $12
    swapon $12
}
mount_partitions_MBR(){
    echo Mounting partitions
    mount $13 /mnt
}
partition_disk_MBR(){
(
    echo o # Create a new empty dos partition table
    echo n # Add a new partition
    echo 1 # Partition number
    echo p # Primary type
    echo   # First sector (Accept default: 1)
    echo +10G # size of partition
    echo a # set boot flag
    echo n # Add a new partition
    echo 2 # Partition number
    echo p # Primary type
    echo   # First sector (Accept default: 1)
    echo   # Last sector (Accept default: 1)
    echo t # set type of partition 
    echo 2 # select partition 1
    echo 82 # set type to efi partition 

    echo w # Write changes
) | fdisk $1
}
update_pacman_mirror(){
    ## Norway
    echo "Server = http://mirror.neuf.no/archlinux/\$repo/os/\$arch" | cat - /etc/pacman.d/mirrorlist > temp && mv temp /etc/pacman.d/mirrorlist
}

check_boot_type(){
    if [ -e /sys/firmware/efi/efivars ];then
        echo "efi"
    else
        echo ""
    fi
}

INSTALL_DISK=$2
BOOT_TYPE=check_boot_type
check_for_disk_argument $1 $2
check_if_disk_exists $INSTALL_DISK 
timedatectl set-ntp true

if [ "$BOOT_TYPE" = "efi" ]; then 
    echo "making efi filesystem" 
    partition_disk_efi $INSTALL_DISK
    format_partitions_efi $INSTALL_DISK
    mount_partitions_efi $INSTALL_DISK
else
    echo "making MBR filesystem" 
    partition_disk_MBR $INSTALL_DISK
    format_partitions_MBR $INSTALL_DISK
    mount_partitions_MBR $INSTALL_DISK
fi;

update_pacman_mirror

#packstrap
pacstrap /mnt base base-devel vim
##GenfsTab
genfstab -U /mnt >> /mnt/etc/fstab
##copy script part 2 into /mnt
cp part2 /mnt/part2
cp pkglist.txt /mnt/pkglist.txt
touch /mnt/efi

arch-chroot /mnt ./part2

